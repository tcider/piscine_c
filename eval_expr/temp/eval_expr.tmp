#include "ft_eval_expr.h"

char	ft_is_sign(char *str, int i)
{

	if (str[i] != '-' && str[i] != '+')
		return (0);
	if (str[i + 1] && !ft_is_num(str[i + 1]))
		return (0);
	i--; 
	while (i >= 0 && (str[i] == ' ' || str[i] == '\t' || str[i] == '\n'))
		i--;
	if (i >= 0 && (ft_is_num(str[i]) || str[i] == ')'))
		return (0);
	return (1);
}

char	ft_prior_op(char c)
{
	if (c == '*' || c == '/' || c == '%')
		return (3);
	else if (c == '+' || c == '-')
		return (2);
	else if (c == '(' || c == ')')
		return (1);
	else
		return (0);
}

//  сократить! сделать вайл как в главной ф-ии

char	*ft_expr_rpn(char *str)
{
	char	*res;
	char	tmp[BUF_SIZE];
	int		i;
	int		j;
	int		k;

	i = 0;
	j = 0;
	k = -1;
	if (!(res = (char*)malloc(sizeof(char) * BUF_SIZE + 1)))
		return (NULL);
	while (str[i])
	{
		if (str[i] == '-' && ft_is_sign(str, i))
			res[j++] = str[i++];
		if (str[i] == '+' && ft_is_sign(str, i))
			i++;
		if (ft_is_num(str[i]))
		{
			while (str[i] && ft_is_num(str[i]))
				res[j++] = str[i++];
			res[j++] = ' ';
		}
		if (ft_is_op(str[i]))
		{
			while (k >= 0 && ft_prior_op(tmp[k]) >= ft_prior_op(str[i]))
			{
				res[j++] = tmp[k--];
				res[j++] = ' ';
			}
			tmp[++k] = str[i++];
		}
		if (str[i] == '(')
			tmp[++k] = str[i++];
		if (str[i] == ')')
		{
			while (k >= 0 && tmp[k] != '(')
			{
				res[j++] = tmp[k--];
				res[j++] = ' ';
			}
			k--;
			i++;
		}
		while (str[i] == ' ' || str[i] == '\n' || str[i] == '\t')
			i++;
	}
	while (k >= 0)
	{
		res[j++] = tmp[k--];
		res[j++] = ' ';
	}
	res[j] = '\0';
	return (res);
}
